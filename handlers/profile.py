import json
from datetime import datetime
from telegram.ext import MessageHandler, filters
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ContextTypes

from keyboards import get_profile_keyboard, get_edit_profile_keyboard, get_back_to_profile_keyboard, get_gender_keyboard, get_target_gender_keyboard, get_main_menu_keyboard

async def show_profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    db = context.bot_data['db']
    user_id = update.effective_user.id

    profile = db.get_profile(user_id)
    if not profile:
        await update.message.reply_text(
            "–£ —Ç–µ–±—è –µ—â–µ –Ω–µ—Ç –ø—Ä–æ—Ñ–∏–ª—è. –ù–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –µ–≥–æ!",
            reply_markup=get_main_menu_keyboard()
        )
        return

    gender_display = {
        'male': 'üë® –ú—É–∂—Å–∫–æ–π',
        'female': 'üë© –ñ–µ–Ω—Å–∫–∏–π',
        'other': 'üîÆ –î—Ä—É–≥–æ–π'
    }.get(profile['gender'], 'üîÆ –î—Ä—É–≥–æ–π')

    target_display = {
        'male': 'üë® –ü–∞—Ä–Ω—è',
        'female': 'üë© –î–µ–≤—É—à–∫—É',
        'all': 'üë• –í—Å–µ—Ö'
    }.get(profile['target_gender'], 'üë• –í—Å–µ—Ö')

    profile_text = (
        f"üë§ <b>–¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å</b>\n\n"
        f"üìù <b>–ò–º—è:</b> {profile['name']}\n"
        f"üéÇ <b>–í–æ–∑—Ä–∞—Å—Ç:</b> {profile['age']}\n"
        f"‚öß <b>–ü–æ–ª:</b> {gender_display}\n"
        f"üéØ <b>–ò—â—É:</b> {target_display}\n"
        f"üèô <b>–ì–æ—Ä–æ–¥:</b> {profile['city']}\n"
        f"üìñ <b>–û —Å–µ–±–µ:</b> {profile['bio'] or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n"
        f"üì∏ <b>–§–æ—Ç–æ:</b> {'‚úÖ –ï—Å—Ç—å' if profile['photos'] else '‚ùå –ù–µ—Ç'}\n"
        f"üëÅ <b>–°—Ç–∞—Ç—É—Å:</b> {'‚úÖ –ê–∫—Ç–∏–≤–Ω–∞' if profile['is_active'] else '‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω–∞'}"
    )

    if profile['photos']:
        await update.message.reply_photo(
            photo=profile['photos'][0],
            caption=profile_text,
            reply_markup=get_profile_keyboard(),
            parse_mode='HTML'
        )
    else:
        await update.message.reply_text(
            profile_text,
            reply_markup=get_profile_keyboard(),
            parse_mode='HTML'
        )

async def handle_profile_actions(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è –≤ –ø—Ä–æ—Ñ–∏–ª–µ"""
    text = update.message.text
    db = context.bot_data['db']
    user_id = update.effective_user.id

    if not db.profile_exists(user_id):
        await update.message.reply_text(
            "–£ —Ç–µ–±—è –µ—â–µ –Ω–µ—Ç –ø—Ä–æ—Ñ–∏–ª—è. –ù–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –µ–≥–æ!",
            reply_markup=get_main_menu_keyboard()
        )
        return

    if text == '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å':
        await show_edit_menu(update, context)

    elif text == '‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –ø—Ä–æ—Ñ–∏–ª—é':
        context.user_data.pop('adding_photo', None)
        context.user_data.pop('managing_photos', None)
        context.user_data.pop('editing_field', None)
        await show_profile(update, context)

    elif text == '‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é':
        context.user_data.pop('adding_photo', None)
        context.user_data.pop('managing_photos', None)
        context.user_data.pop('editing_field', None)
        await update.message.reply_text(
            "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
            reply_markup=get_main_menu_keyboard()
        )

    else:
        await show_profile(update, context)

async def handle_photo_addition(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ —á–µ—Ä–µ–∑ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–º"""
    if (context.user_data.get('adding_photo') or context.user_data.get('managing_photos')) and update.message.photo:
        photo = update.message.photo[-1]
        photo_file_id = photo.file_id

        db = context.bot_data['db']
        user_id = update.effective_user.id

        print(f"üîç DEBUG: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ –≤ –ø—Ä–æ—Ñ–∏–ª—å, user_id={user_id}")

        with db.get_connection() as conn:
            conn.execute(
                'UPDATE profiles SET photos = ?, updated_at = ? WHERE user_id = ?',
                (json.dumps([photo_file_id]), datetime.now().isoformat(), user_id)
            )

        print(f"üîç DEBUG: –§–æ—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")

        profile = db.get_profile(user_id)
        print(f"üîç DEBUG: –§–æ—Ç–æ –≤ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {len(profile['photos'])}")

        await update.message.reply_text(
            "‚úÖ –§–æ—Ç–æ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!",
            reply_markup=get_profile_keyboard()
        )

        context.user_data.pop('adding_photo', None)
        context.user_data.pop('managing_photos', None)

        await show_profile(update, context)
        return

    print(f"üîç DEBUG: –§–æ—Ç–æ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –≤ profile.py, —Å–æ—Å—Ç–æ—è–Ω–∏—è: adding_photo={context.user_data.get('adding_photo')}, managing_photos={context.user_data.get('managing_photos')}")

async def show_edit_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    await update.message.reply_text(
        "‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è</b>\n\n"
        "–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å?",
        reply_markup=get_edit_profile_keyboard(),
        parse_mode='HTML'
    )

async def handle_edit_choice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –ø–æ–ª—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    text = update.message.text
    db = context.bot_data['db']
    user_id = update.effective_user.id

    if text == 'üì∑ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ':
        profile = db.get_profile(user_id)
        photo_count = len(profile['photos'])

        if photo_count >= 1:
            keyboard = [
                [KeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å —Ç–µ–∫—É—â–µ–µ —Ñ–æ—Ç–æ")],
                [KeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –ø—Ä–æ—Ñ–∏–ª—é")]
            ]
            reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

            await update.message.reply_text(
                f"üì∏ –£ —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å —Ñ–æ—Ç–æ –≤ –∞–Ω–∫–µ—Ç–µ.\n"
                "–•–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å —Ç–µ–∫—É—â–µ–µ —Ñ–æ—Ç–æ –∏ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –Ω–æ–≤–æ–µ?",
                reply_markup=reply_markup
            )
            context.user_data['managing_photos'] = True
        else:
            await update.message.reply_text(
                "üì∏ –í —Ç–≤–æ–µ–π –∞–Ω–∫–µ—Ç–µ –µ—â–µ –Ω–µ—Ç —Ñ–æ—Ç–æ.\n"
                "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –≤ –∞–Ω–∫–µ—Ç—É:",
                reply_markup=get_back_to_profile_keyboard()
            )
            context.user_data['adding_photo'] = True

    elif text == 'üóë –£–¥–∞–ª–∏—Ç—å —Ç–µ–∫—É—â–µ–µ —Ñ–æ—Ç–æ':
        db = context.bot_data['db']
        user_id = update.effective_user.id

        with db.get_connection() as conn:
            conn.execute(
                'UPDATE profiles SET photos = ?, updated_at = ? WHERE user_id = ?',
                (json.dumps([]), datetime.now().isoformat(), user_id)
            )

        await update.message.reply_text(
            "‚úÖ –¢–µ–∫—É—â–µ–µ —Ñ–æ—Ç–æ —É–¥–∞–ª–µ–Ω–æ! –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ:",
            reply_markup=get_back_to_profile_keyboard()
        )
        context.user_data['adding_photo'] = True
        context.user_data.pop('managing_photos', None)

    elif text in ['‚úèÔ∏è –ò–º—è', 'üéÇ –í–æ–∑—Ä–∞—Å—Ç', '‚öß –ü–æ–ª', 'üéØ –ö–æ–≥–æ –∏—â—É', 'üèô –ì–æ—Ä–æ–¥', 'üìñ –û —Å–µ–±–µ']:
        field_map = {
            '‚úèÔ∏è –ò–º—è': 'name',
            'üéÇ –í–æ–∑—Ä–∞—Å—Ç': 'age',
            '‚öß –ü–æ–ª': 'gender',
            'üéØ –ö–æ–≥–æ –∏—â—É': 'target_gender',
            'üèô –ì–æ—Ä–æ–¥': 'city',
            'üìñ –û —Å–µ–±–µ': 'bio'
        }

        field = field_map.get(text)
        if field:
            context.user_data['editing_field'] = field

            if field == 'gender':
                await update.message.reply_text(
                    "–í—ã–±–µ—Ä–∏ –Ω–æ–≤—ã–π –ø–æ–ª:",
                    reply_markup=get_gender_keyboard()
                )
            elif field == 'target_gender':
                await update.message.reply_text(
                    "–í—ã–±–µ—Ä–∏, –∫–æ–≥–æ —Ç—ã –∏—â–µ—à—å:",
                    reply_markup=get_target_gender_keyboard()
                )
            else:
                prompt = {
                    'name': "–í–≤–µ–¥–∏ –Ω–æ–≤–æ–µ –∏–º—è:",
                    'age': "–í–≤–µ–¥–∏ –Ω–æ–≤—ã–π –≤–æ–∑—Ä–∞—Å—Ç:",
                    'city': "–í–≤–µ–¥–∏ –Ω–æ–≤—ã–π –≥–æ—Ä–æ–¥:",
                    'bio': "–í–≤–µ–¥–∏ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:"
                }.get(field, "–í–≤–µ–¥–∏ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:")

                await update.message.reply_text(
                    prompt,
                    reply_markup=get_back_to_profile_keyboard()
                )

    elif text == '‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –ø—Ä–æ—Ñ–∏–ª—é':
        context.user_data.pop('managing_photos', None)
        context.user_data.pop('adding_photo', None)
        await show_profile(update, context)

async def handle_edit_input(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    field = context.user_data.get('editing_field')
    text = update.message.text
    db = context.bot_data['db']
    user_id = update.effective_user.id

    if not field:
        await show_profile(update, context)
        return

    if field == 'name' and len(text) < 2:
        await update.message.reply_text("–ò–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –∫–æ—Ä–æ—á–µ 2 —Å–∏–º–≤–æ–ª–æ–≤. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑:")
        return

    elif field == 'age':
        try:
            age = int(text)
            if age < 16 or age > 100:
                await update.message.reply_text("–í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 16 –¥–æ 100 –ª–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑:")
                return
            text = str(age)
        except ValueError:
            await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑:")
            return

    elif field == 'gender':
        gender_map = {
            'üë® –ú—É–∂—Å–∫–æ–π': 'male',
            'üë© –ñ–µ–Ω—Å–∫–∏–π': 'female',
            'üîÆ –î—Ä—É–≥–æ–π': 'other'
        }
        text = gender_map.get(text, 'other')

    elif field == 'target_gender':
        target_map = {
            'üë® –ü–∞—Ä–Ω—è': 'male',
            'üë© –î–µ–≤—É—à–∫—É': 'female',
            'üë• –í—Å–µ—Ö': 'all'
        }
        text = target_map.get(text, 'all')

    elif field == 'city' and len(text) < 2:
        await update.message.reply_text("–ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –∫–æ—Ä–æ—á–µ 2 —Å–∏–º–≤–æ–ª–æ–≤. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑:")
        return

    if db.update_profile_field(user_id, field, text):
        await update.message.reply_text(
            "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!",
            reply_markup=get_profile_keyboard()
        )

        await show_profile(update, context)
    else:
        await update.message.reply_text(
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑.",
            reply_markup=get_profile_keyboard()
        )

    context.user_data.pop('editing_field', None)

profile_handler = MessageHandler(filters.Regex('^(üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å)$'), show_profile)
profile_actions_handler = MessageHandler(
    filters.Regex('^(‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å|‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –ø—Ä–æ—Ñ–∏–ª—é|‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é)$'),
    handle_profile_actions
)
edit_choice_handler = MessageHandler(
    filters.Regex('^(‚úèÔ∏è –ò–º—è|üéÇ –í–æ–∑—Ä–∞—Å—Ç|‚öß –ü–æ–ª|üéØ –ö–æ–≥–æ –∏—â—É|üèô –ì–æ—Ä–æ–¥|üìñ –û —Å–µ–±–µ|üì∑ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ|üóë –£–¥–∞–ª–∏—Ç—å —Ç–µ–∫—É—â–µ–µ —Ñ–æ—Ç–æ)$'),
    handle_edit_choice
)