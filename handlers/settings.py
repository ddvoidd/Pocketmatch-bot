from telegram.ext import MessageHandler, filters
from telegram import Update
from telegram.ext import ContextTypes

from keyboards import get_settings_keyboard, get_main_menu_keyboard

async def show_settings(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    db = context.bot_data['db']
    user_id = update.effective_user.id

    profile = db.get_profile(user_id)
    if not profile:
        await update.message.reply_text(
            "–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π –ø—Ä–æ—Ñ–∏–ª—å –∫–æ–º–∞–Ω–¥–æ–π /start",
            reply_markup=get_main_menu_keyboard()
        )
        return

    is_active = profile['is_active']
    status = "–≤–∫–ª—é—á–µ–Ω–∞" if is_active else "–≤—ã–∫–ª—é—á–µ–Ω–∞"
    visibility = "–≤–∏–¥—è—Ç" if is_active else "–Ω–µ –≤–∏–¥—è—Ç"

    await update.message.reply_text(
        f"‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>\n\n"
        f"–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ —Å–µ–π—á–∞—Å <b>{status}</b>.\n"
        f"–î—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ <b>{visibility}</b> —Ç–µ–±—è –≤ –ø–æ–∏—Å–∫–µ.\n\n"
        f"–ß—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å?",
        reply_markup=get_settings_keyboard(is_active),
        parse_mode='HTML'
    )

async def handle_settings_actions(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö"""
    text = update.message.text
    db = context.bot_data['db']
    user_id = update.effective_user.id

    if not db.profile_exists(user_id):
        await update.message.reply_text(
            "–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π –ø—Ä–æ—Ñ–∏–ª—å –∫–æ–º–∞–Ω–¥–æ–π /start",
            reply_markup=get_main_menu_keyboard()
        )
        return

    if text == '‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é':
        await update.message.reply_text(
            "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
            reply_markup=get_main_menu_keyboard()
        )
        return

    elif text in ['‚úÖ –í–∫–ª—é—á–∏—Ç—å –∞–Ω–∫–µ—Ç—É', '‚ùå –í—ã–∫–ª—é—á–∏—Ç—å –∞–Ω–∫–µ—Ç—É']:
        is_active = text == '‚úÖ –í–∫–ª—é—á–∏—Ç—å –∞–Ω–∫–µ—Ç—É'
        db.set_profile_active(user_id, is_active)

        status = "–≤–∫–ª—é—á–µ–Ω–∞" if is_active else "–≤—ã–∫–ª—é—á–µ–Ω–∞"
        visibility = "–≤–∏–¥—è—Ç" if is_active else "–Ω–µ –≤–∏–¥—è—Ç"

        await update.message.reply_text(
            f"‚úÖ <b>–ì–æ—Ç–æ–≤–æ!</b>\n\n"
            f"–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ —Ç–µ–ø–µ—Ä—å <b>{status}</b>.\n"
            f"–î—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ <b>{visibility}</b> —Ç–µ–±—è –≤ –ø–æ–∏—Å–∫–µ.",
            reply_markup=get_settings_keyboard(is_active),
            parse_mode='HTML'
        )

    elif text == '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏':
        await show_settings(update, context)

    else:
        profile = db.get_profile(user_id)
        if profile:
            await show_settings(update, context)

settings_handler = MessageHandler(filters.Regex('^(‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏)$'), show_settings)
settings_actions_handler = MessageHandler(
    filters.Regex('^(‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é|‚úÖ –í–∫–ª—é—á–∏—Ç—å –∞–Ω–∫–µ—Ç—É|‚ùå –í—ã–∫–ª—é—á–∏—Ç—å –∞–Ω–∫–µ—Ç—É|üë§ –ê–Ω–∫–µ—Ç–∞: .*)$'),
    handle_settings_actions
)